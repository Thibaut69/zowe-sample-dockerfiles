name: Build Sample Docker Image
on:
  workflow_call:
    inputs:
      build-args:
        required: false
        type: string
      name:
        required: true
        type: string
      path:
        required: true
        type: string
      push:
        required: true
        default: false
        type: boolean
      qemu:
        required: false
        default: false
        type: boolean
      tags:
        required: false
        type: string
      timeout:
        required: false
        default: 15
        type: number

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.timeout }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Default Tags
        run: |
          {
            echo 'DEFAULT_TAGS<<EOF'
            echo 'ghcr.io/zowe/zowe-sample-dockerfiles-${{ inputs.name }}:latest'
            echo 'zowe-docker-snapshot.jfrog.io/ompzowe/zowe-sample-dockerfiles-${{ inputs.name }}:latest'
            echo EOF
          } >> "$GITHUB_ENV"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        if: ${{ inputs.qemu }}
        with:
          platforms: arm64

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Zowe Artifactory
        uses: docker/login-action@v3
        with:
          registry: zowe-docker-snapshot.jfrog.io
          username: ${{ secrets.ARTIFACTORY_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_PASSWORD }}

      - name: Build & Push
        id:   build
        uses: docker/build-push-action@v5
        with:
          build-args: ${{ inputs.build-args }}
          context: ${{ inputs.path }}
          push: ${{ inputs.push }}
          platforms: ${{ inputs.qemu && 'linux/amd64,linux/arm64' || 'linux/amd64' }}
          secrets: github_token=${{ secrets.GITHUB_TOKEN }}
          tags: ${{ inputs.tags || env.DEFAULT_TAGS }}

      - name: Image Digest
        run:  echo ${{ steps.build.outputs.digest }}